<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on Francesco Sella</title>
    <link>/categories/r/</link>
    <description>Recent content in R on Francesco Sella</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018</copyright>
    <lastBuildDate>Mon, 25 Feb 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/r/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Plotting pre-post test analysis</title>
      <link>/post/plotting-pre-post-test/</link>
      <pubDate>Mon, 25 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/plotting-pre-post-test/</guid>
      <description>A quick code to create a useful plot to visualise pre- and post-test results. A scatterplot between pre-test and post-test scores for the control and the traning group is presented. The straight black lines represent correlations between pre-test and post-test scores within the two groups. The straight lightgrey line represents the same values at pre-test and post-test â€“&amp;gt; Subjects above the line display a better performance at post-test compared to pre-test.</description>
    </item>
    
    <item>
      <title>Reporting Bayes factors from regression analysis</title>
      <link>/post/reporting-bf/</link>
      <pubDate>Tue, 29 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/reporting-bf/</guid>
      <description>A quick function to extract and report large Bayes factors as a power of 10 when running regression analysis. The function takes the output of regressionBF (Package BayesFactor: Morey &amp;amp; Rouder, 2018), extracts the BF and converts into a format for Rmarkdown.
# A fucntion to extract and report Bayes FactorsBF_scirep_str &amp;lt;- function(model) {output &amp;lt;- formatC(round(extractBF(model, onlybf = T)), digits = 3)output &amp;lt;- sub(&amp;quot;e&amp;quot;, &amp;quot;x10&amp;lt;sup&amp;gt;&amp;quot;, output) #Replace e with 10^output &amp;lt;- sub(&amp;quot;\\+0?</description>
    </item>
    
    <item>
      <title>Boxplot with quartiles</title>
      <link>/post/plotting-quartiles/</link>
      <pubDate>Sun, 23 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/plotting-quartiles/</guid>
      <description>Boxplots are one of the best ways to represent distributions. Below, there is some code to create a costum boxplot by determining the pecentiles of the distribution that the wiskers and the box represent. In the example, I plotted the quartiles of the distribution of weight as a function of group from the dataset PlantGrowth.
First, we create a function to extract quartiles. The values in probs represent the percentiles of the distributions, which then will be plotted.</description>
    </item>
    
  </channel>
</rss>